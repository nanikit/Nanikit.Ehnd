name: Test & Publish

on:
  push:
    branches: [main, stage]

jobs:
  test:
    strategy:
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      DOTNET_NOLOGO: true
    outputs:
      version: ${{ steps.versioning.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0
      - name: Setup
        run: |
          iwr https://dot.net/v1/dotnet-install.ps1 -outfile install-dotnet.ps1
          .\install-dotnet.ps1 -Architecture x86 -DryRun -Version 8.0
      - name: Test
        run: dotnet test --filter 'TestCategory != NoCi'
      - id: versioning
        name: Set publish
        # if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          version="$(nbgv get-version -v SimpleVersion)$(nbgv get-version -v PrereleaseVersion)"
          if [ -z "$(git tag -l v$version)" ] && [ -n "${{ secrets.NUGET_API_KEY }}" ]; then
            echo version=$version >> "$GITHUB_OUTPUT"
          fi

  publish:
    needs: test
    if: needs.test.outputs.version && github.ref_name == 'main'
    runs-on: ubuntu-latest
    env:
      DOTNET_NOLOGO: true
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0
      - name: Setup
        uses: actions/setup-dotnet@main
        with:
          dotnet-version: "8.0"
      - name: Publish
        run: |
          version=${{needs.test.outputs.version}}
          dotnet pack --include-source --configuration Release -p:Version=$version
          dotnet nuget push Nanikit.Ehnd/bin/x86/Release/*.symbols.nupkg \
            --api-key ${{ secrets.NUGET_API_KEY }} \
            --source https://api.nuget.org/v3/index.json
          git tag v$version
          git push origin v$version
